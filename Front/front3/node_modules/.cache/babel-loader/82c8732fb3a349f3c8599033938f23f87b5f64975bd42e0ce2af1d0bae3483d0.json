{"ast":null,"code":"/*import {Button, TextField} from \"@mui/material\";\nimport \"./AddVacations.css\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useForm} from \"react-hook-form\";\nimport React, {useState} from \"react\";\nimport Vacation from \"../../../interfaces/Vacation\";\n\n\nconst AddVacation = (newVacation: Vacation) => {\n    // use form for form validation\n    const {\n        register, \n        handleSubmit,\n        formState: {errors},\n    } = useForm();\n\n    const [destination, setdestination] = useState(\"\");\n    const [description, setdescription] = useState(\"\");\n    const [startOn, setstartOn] = useState(\"\");\n    const [endOn, setendOn] = useState(\"\");\n    const [price, setprice] = useState(\"\");\n\n    const send = async (event: any) => {\n        try {\n            event.preventDefault();\n\n            // check price\n            if (price < 0 || price > 10000) {\n                alert(\"It is not possible to enter a negative number or higher than 10,000\");\n                return;\n            }\n            \n            // check endOn>startOn\n            if (startOn>endOn) {\n                alert(\"The end date can not be earlier than the start date\");\n                return;\n            }\n\n\n\n            console.log('1')\n\n            const res = await fetch(`http://localhost:8080/user/login`, {\n                method: \"POST\",\n                body: JSON.stringify({email, password}),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                }\n            })\n            console.log(res);\n            console.log('2')\n\n            if (res.status === 200){\n                const data = await res.json();\n                console.log('3')\n\n                console.log(`data from login is: ${data}`);\n                console.log('4')\n\n\n                // change the route to /vacations\n                navigate(\"/vacationsList\");\n            } else if (res.status === 404) {\n                alert(\"Incorrect email or password\");\n            }\n        } catch (error: any) {\n            console.error(`Error in login, message: ${error.message}, stack: ${error.stack}`);\n        }\n\n    };\n\n\n    const navigate = useNavigate();\n    return (\n        <div>\n            <form>\n            <label htmlFor='firstNamelRegisterInput'>\n                    destination:\n                </label>\n                <input\n                    value={destination}\n                    onChange={event => setdestination(event.target.value)}\n                    type=\"firstName\" name=\"firstNameRegisterInput\" id='firstNameRegisterInput'/>\n                <label htmlFor='lastNameRegisterInput'>\n                    description:\n                </label>\n                <input\n                    value={description}\n                    onChange={event => setdescription(event.target.value)}\n                    type=\"lastName\" name=\"LastNameRegisterInput\" id='LastNameRegisterInput'/>\n                <label htmlFor='emailLoginInput'>\n                    start On:\n                </label>\n                <input\n                    value={startOn}\n                    onChange={event => setendOn(event.target.value)}\n                    type=\"email\" name=\"emailLoginInput\" id='emailLoginInput'/>\n                <label htmlFor='passwordLoginInput'>\n                    end On:\n                </label>\n                <input\n                    value={endOn}\n                    onChange={event => setendOn(event.target.value)}\n                    type=\"password\" name=\"passwordLoginInput\" id='passwordLoginInput'/>\n                <button onClick={(event)=>send(event)}>Register</button>\n                <label htmlFor='passwordLoginInput'>\n                    Price:\n                </label>\n                <input\n                    value={price}\n                    onChange={event => setprice(event.target.value)}\n                    type=\"password\" name=\"passwordLoginInput\" id='passwordLoginInput'/>\n                <button onClick={(event)=>send(event)}>Register</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AddVacation;*/","map":{"version":3,"names":[],"sources":["C:/Users/elino/OneDrive/שולחן העבודה/vacations3/vacations3/Front/front3/src/Components/Pages/AddVacation/AddVacation.tsx"],"sourcesContent":["/*import {Button, TextField} from \"@mui/material\";\nimport \"./AddVacations.css\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useForm} from \"react-hook-form\";\nimport React, {useState} from \"react\";\nimport Vacation from \"../../../interfaces/Vacation\";\n\n\nconst AddVacation = (newVacation: Vacation) => {\n    // use form for form validation\n    const {\n        register, \n        handleSubmit,\n        formState: {errors},\n    } = useForm();\n\n    const [destination, setdestination] = useState(\"\");\n    const [description, setdescription] = useState(\"\");\n    const [startOn, setstartOn] = useState(\"\");\n    const [endOn, setendOn] = useState(\"\");\n    const [price, setprice] = useState(\"\");\n\n    const send = async (event: any) => {\n        try {\n            event.preventDefault();\n\n            // check price\n            if (price < 0 || price > 10000) {\n                alert(\"It is not possible to enter a negative number or higher than 10,000\");\n                return;\n            }\n            \n            // check endOn>startOn\n            if (startOn>endOn) {\n                alert(\"The end date can not be earlier than the start date\");\n                return;\n            }\n\n\n\n            console.log('1')\n\n            const res = await fetch(`http://localhost:8080/user/login`, {\n                method: \"POST\",\n                body: JSON.stringify({email, password}),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                }\n            })\n            console.log(res);\n            console.log('2')\n\n            if (res.status === 200){\n                const data = await res.json();\n                console.log('3')\n\n                console.log(`data from login is: ${data}`);\n                console.log('4')\n\n\n                // change the route to /vacations\n                navigate(\"/vacationsList\");\n            } else if (res.status === 404) {\n                alert(\"Incorrect email or password\");\n            }\n        } catch (error: any) {\n            console.error(`Error in login, message: ${error.message}, stack: ${error.stack}`);\n        }\n\n    };\n\n\n    const navigate = useNavigate();\n    return (\n        <div>\n            <form>\n            <label htmlFor='firstNamelRegisterInput'>\n                    destination:\n                </label>\n                <input\n                    value={destination}\n                    onChange={event => setdestination(event.target.value)}\n                    type=\"firstName\" name=\"firstNameRegisterInput\" id='firstNameRegisterInput'/>\n                <label htmlFor='lastNameRegisterInput'>\n                    description:\n                </label>\n                <input\n                    value={description}\n                    onChange={event => setdescription(event.target.value)}\n                    type=\"lastName\" name=\"LastNameRegisterInput\" id='LastNameRegisterInput'/>\n                <label htmlFor='emailLoginInput'>\n                    start On:\n                </label>\n                <input\n                    value={startOn}\n                    onChange={event => setendOn(event.target.value)}\n                    type=\"email\" name=\"emailLoginInput\" id='emailLoginInput'/>\n                <label htmlFor='passwordLoginInput'>\n                    end On:\n                </label>\n                <input\n                    value={endOn}\n                    onChange={event => setendOn(event.target.value)}\n                    type=\"password\" name=\"passwordLoginInput\" id='passwordLoginInput'/>\n                <button onClick={(event)=>send(event)}>Register</button>\n                <label htmlFor='passwordLoginInput'>\n                    Price:\n                </label>\n                <input\n                    value={price}\n                    onChange={event => setprice(event.target.value)}\n                    type=\"password\" name=\"passwordLoginInput\" id='passwordLoginInput'/>\n                <button onClick={(event)=>send(event)}>Register</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AddVacation;*/ \n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}