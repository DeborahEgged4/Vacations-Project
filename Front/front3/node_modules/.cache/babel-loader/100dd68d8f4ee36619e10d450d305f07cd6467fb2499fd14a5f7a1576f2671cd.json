{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elino\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\vacations3\\\\vacations3\\\\Front\\\\front3\\\\src\\\\Components\\\\Pages\\\\Register\\\\Register.tsx\",\n  _s = $RefreshSig$();\nimport \"./Login.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = props => {\n  _s();\n  // use form for form validation\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const send = async event => {\n    try {\n      event.preventDefault();\n\n      // check email\n      if (email === \"\") {\n        alert(\"Email is missing\");\n        return;\n      }\n\n      // check password\n      if (password === \"\") {\n        alert(\"Password is missing\");\n        return;\n      }\n\n      // check if email is valid email using regex\n      if (!email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\n        alert(\"Email is not valid\");\n        return;\n      }\n\n      // check if password is at least 4 characters long\n      if (password.length < 4) {\n        alert(\"Password is too short\");\n        return;\n      }\n      console.log('1');\n      const res = await fetch(`http://localhost:8080/user/login`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(res);\n      console.log('2');\n      if (res.status === 200) {\n        const data = await res.json();\n        console.log('3');\n        console.log(`data from login is: ${data}`);\n        console.log('4');\n        props.setUser(data);\n        if (data.isAdmin) {\n          props.setIsAdmin(true);\n        }\n        console.log('5');\n\n        // change the route to /vacations\n        navigate(\"/vacationsList\");\n      } else if (res.status === 404) {\n        alert(\"Incorrect email or password\");\n      }\n    } catch (error) {\n      console.error(`Error in login, message: ${error.message}, stack: ${error.stack}`);\n    }\n  };\n  const navigate = useNavigate();\n  return (\n    /*#__PURE__*/\n    // <div className=\"Login Box\">\n    //   <form onSubmit={handleSubmit(send)}>\n    //   <h1>Login</h1>\n    //   <TextField placeholder=\"enter your email\"\n    //   {...register(\"email\", {\n    //     required: true,\n    //     pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n    //   })}\n    //   error={Boolean(errors.email)}\n    //   helperText={\n    //     errors.email &&\n    //     \"Email is required and must be a valid email address\"\n    //   }\n    //   ></TextField>\n    //   <br/>\n    //   <br/>\n    //   <TextField placeholder=\"enter your password\"\n    //     {...register(\"password\", {\n    //       required: true,\n    //       minLength: 4,\n    //     })}\n    //     error={Boolean(errors.password)}\n    //     helperText={\n    //       errors.password &&\n    //       \"Password must have a minimum of 4 characters\"\n    //     }\n    //   ></TextField>\n    //   <br/>\n    //   <br/>\n    //   <Button onClick={()=>navigate(\"/VacationsList\")}>Login</Button>\n    //   </form>\n    // </div>\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"emailLoginInput\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          onChange: event => setEmail(event.target.value),\n          type: \"email\",\n          name: \"emailLoginInput\",\n          id: \"emailLoginInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"passwordLoginInput\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: event => setPassword(event.target.value),\n          type: \"password\",\n          name: \"passwordLoginInput\",\n          id: \"passwordLoginInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => send(event),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Register, \"R61IOcFriOohTxR17v1OzneLOEI=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = Register;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useNavigate","useForm","React","useState","jsxDEV","_jsxDEV","Register","props","_s","register","handleSubmit","formState","errors","email","setEmail","password","setPassword","send","event","preventDefault","alert","match","length","console","log","res","fetch","method","body","JSON","stringify","headers","status","data","json","setUser","isAdmin","setIsAdmin","navigate","error","message","stack","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","type","name","id","onClick","_c","Login","$RefreshReg$"],"sources":["C:/Users/elino/OneDrive/שולחן העבודה/vacations3/vacations3/Front/front3/src/Components/Pages/Register/Register.tsx"],"sourcesContent":["import {Button, TextField} from \"@mui/material\";\nimport \"./Login.css\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useForm} from \"react-hook-form\";\nimport React, {useState} from \"react\";\n\ninterface ILoginProps {\n    setUser: React.Dispatch<any>\n    setIsLogged: React.Dispatch<any>\n    setIsAdmin: React.Dispatch<any>\n}\n\n\nconst Register = (props: ILoginProps) => {\n    // use form for form validation\n    const {\n        register,\n        handleSubmit,\n        formState: {errors},\n    } = useForm();\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const send = async (event: any) => {\n        try {\n            event.preventDefault();\n\n            // check email\n            if (email === \"\") {\n                alert(\"Email is missing\");\n                return;\n            }\n\n            // check password\n            if (password === \"\") {\n                alert(\"Password is missing\");\n                return;\n            }\n\n            // check if email is valid email using regex\n            if (!email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\n                alert(\"Email is not valid\");\n                return;\n            }\n\n            // check if password is at least 4 characters long\n            if (password.length < 4) {\n                alert(\"Password is too short\");\n                return;\n            }\n\n            console.log('1')\n\n            const res = await fetch(`http://localhost:8080/user/login`, {\n                method: \"POST\",\n                body: JSON.stringify({email, password}),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                }\n            })\n            console.log(res);\n            console.log('2')\n\n            if (res.status === 200){\n                const data = await res.json();\n                console.log('3')\n\n                console.log(`data from login is: ${data}`);\n                console.log('4')\n\n                props.setUser(data);\n                if (data.isAdmin) {\n                    props.setIsAdmin(true);\n                }\n                console.log('5')\n\n\n                // change the route to /vacations\n                navigate(\"/vacationsList\");\n            } else if (res.status === 404) {\n                alert(\"Incorrect email or password\");\n            }\n        } catch (error: any) {\n            console.error(`Error in login, message: ${error.message}, stack: ${error.stack}`);\n        }\n\n    };\n\n\n    const navigate = useNavigate();\n    return (\n        // <div className=\"Login Box\">\n        //   <form onSubmit={handleSubmit(send)}>\n        //   <h1>Login</h1>\n        //   <TextField placeholder=\"enter your email\"\n        //   {...register(\"email\", {\n        //     required: true,\n        //     pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n        //   })}\n        //   error={Boolean(errors.email)}\n        //   helperText={\n        //     errors.email &&\n        //     \"Email is required and must be a valid email address\"\n        //   }\n        //   ></TextField>\n        //   <br/>\n        //   <br/>\n        //   <TextField placeholder=\"enter your password\"\n        //     {...register(\"password\", {\n        //       required: true,\n        //       minLength: 4,\n        //     })}\n        //     error={Boolean(errors.password)}\n        //     helperText={\n        //       errors.password &&\n        //       \"Password must have a minimum of 4 characters\"\n        //     }\n        //   ></TextField>\n        //   <br/>\n        //   <br/>\n        //   <Button onClick={()=>navigate(\"/VacationsList\")}>Login</Button>\n        //   </form>\n        // </div>\n        <div>\n            <form>\n                <label htmlFor='emailLoginInput'>\n                    Email:\n                </label>\n                <input\n                    value={email}\n                    onChange={event => setEmail(event.target.value)}\n                    type=\"email\" name=\"emailLoginInput\" id='emailLoginInput'/>\n                <label htmlFor='passwordLoginInput'>\n                    Password:\n                </label>\n                <input\n                    value={password}\n                    onChange={event => setPassword(event.target.value)}\n                    type=\"password\" name=\"passwordLoginInput\" id='passwordLoginInput'/>\n                <button onClick={(event)=>send(event)}>Login</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;"],"mappings":";;AACA,OAAO,aAAa;AACpB,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,OAAO,QAAO,iBAAiB;AACvC,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAStC,MAAMC,QAAQ,GAAIC,KAAkB,IAAK;EAAAC,EAAA;EACrC;EACA,MAAM;IACFC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAACC;IAAM;EACtB,CAAC,GAAGX,OAAO,CAAC,CAAC;EAEb,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,IAAI,GAAG,MAAOC,KAAU,IAAK;IAC/B,IAAI;MACAA,KAAK,CAACC,cAAc,CAAC,CAAC;;MAEtB;MACA,IAAIN,KAAK,KAAK,EAAE,EAAE;QACdO,KAAK,CAAC,kBAAkB,CAAC;QACzB;MACJ;;MAEA;MACA,IAAIL,QAAQ,KAAK,EAAE,EAAE;QACjBK,KAAK,CAAC,qBAAqB,CAAC;QAC5B;MACJ;;MAEA;MACA,IAAI,CAACP,KAAK,CAACQ,KAAK,CAAC,4BAA4B,CAAC,EAAE;QAC5CD,KAAK,CAAC,oBAAoB,CAAC;QAC3B;MACJ;;MAEA;MACA,IAAIL,QAAQ,CAACO,MAAM,GAAG,CAAC,EAAE;QACrBF,KAAK,CAAC,uBAAuB,CAAC;QAC9B;MACJ;MAEAG,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;MAEhB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,kCAAiC,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACjB,KAAK;UAAEE;QAAQ,CAAC,CAAC;QACvCgB,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACFR,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MAChBF,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;MAEhB,IAAIC,GAAG,CAACO,MAAM,KAAK,GAAG,EAAC;QACnB,MAAMC,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;QAC7BX,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;QAEhBD,OAAO,CAACC,GAAG,CAAE,uBAAsBS,IAAK,EAAC,CAAC;QAC1CV,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;QAEhBjB,KAAK,CAAC4B,OAAO,CAACF,IAAI,CAAC;QACnB,IAAIA,IAAI,CAACG,OAAO,EAAE;UACd7B,KAAK,CAAC8B,UAAU,CAAC,IAAI,CAAC;QAC1B;QACAd,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;;QAGhB;QACAc,QAAQ,CAAC,gBAAgB,CAAC;MAC9B,CAAC,MAAM,IAAIb,GAAG,CAACO,MAAM,KAAK,GAAG,EAAE;QAC3BZ,KAAK,CAAC,6BAA6B,CAAC;MACxC;IACJ,CAAC,CAAC,OAAOmB,KAAU,EAAE;MACjBhB,OAAO,CAACgB,KAAK,CAAE,4BAA2BA,KAAK,CAACC,OAAQ,YAAWD,KAAK,CAACE,KAAM,EAAC,CAAC;IACrF;EAEJ,CAAC;EAGD,MAAMH,QAAQ,GAAGtC,WAAW,CAAC,CAAC;EAC9B;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAK,OAAA;MAAAqC,QAAA,eACIrC,OAAA;QAAAqC,QAAA,gBACIrC,OAAA;UAAOsC,OAAO,EAAC,iBAAiB;UAAAD,QAAA,EAAC;QAEjC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR1C,OAAA;UACI2C,KAAK,EAAEnC,KAAM;UACboC,QAAQ,EAAE/B,KAAK,IAAIJ,QAAQ,CAACI,KAAK,CAACgC,MAAM,CAACF,KAAK,CAAE;UAChDG,IAAI,EAAC,OAAO;UAACC,IAAI,EAAC,iBAAiB;UAACC,EAAE,EAAC;QAAiB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC9D1C,OAAA;UAAOsC,OAAO,EAAC,oBAAoB;UAAAD,QAAA,EAAC;QAEpC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR1C,OAAA;UACI2C,KAAK,EAAEjC,QAAS;UAChBkC,QAAQ,EAAE/B,KAAK,IAAIF,WAAW,CAACE,KAAK,CAACgC,MAAM,CAACF,KAAK,CAAE;UACnDG,IAAI,EAAC,UAAU;UAACC,IAAI,EAAC,oBAAoB;UAACC,EAAE,EAAC;QAAoB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACvE1C,OAAA;UAAQiD,OAAO,EAAGpC,KAAK,IAAGD,IAAI,CAACC,KAAK,CAAE;UAAAwB,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;AAEd,CAAC;AAAAvC,EAAA,CAnIKF,QAAQ;EAAA,QAMNL,OAAO,EAuEMD,WAAW;AAAA;AAAAuD,EAAA,GA7E1BjD,QAAQ;AAqId,eAAekD,KAAK;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}