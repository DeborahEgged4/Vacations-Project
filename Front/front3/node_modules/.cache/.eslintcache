[{"C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\index.tsx":"1","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\reportWebVitals.ts":"2","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Layout\\MainLayout\\MainLayout.tsx":"3","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Layout\\Menu\\Menu.tsx":"4","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Layout\\Footer\\Footer.tsx":"5","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Layout\\Header\\Header.tsx":"6","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Routing\\MainRouting\\MainRouting.tsx":"7","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Pages\\Login\\Login.tsx":"8","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Pages\\Register\\Register.tsx":"9","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Pages\\Page404\\Page404.tsx":"10","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Pages\\AddVacation\\AddVacation.tsx":"11","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Pages\\VacationsList\\VacationsList.tsx":"12","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Pages\\EditVacation\\EditVacation.tsx":"13","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Redux\\VacationReducer.ts":"14"},{"size":662,"mtime":1687774219131,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1687774219287,"results":"17","hashOfConfig":"16"},{"size":1056,"mtime":1687774220195,"results":"18","hashOfConfig":"16"},{"size":563,"mtime":1687781000116,"results":"19","hashOfConfig":"16"},{"size":200,"mtime":1687774219600,"results":"20","hashOfConfig":"16"},{"size":173,"mtime":1687774219992,"results":"21","hashOfConfig":"16"},{"size":1468,"mtime":1687781068653,"results":"22","hashOfConfig":"16"},{"size":4576,"mtime":1688041321489,"results":"23","hashOfConfig":"16"},{"size":5150,"mtime":1687788915085,"results":"24","hashOfConfig":"16"},{"size":159,"mtime":1687774220771,"results":"25","hashOfConfig":"16"},{"size":4737,"mtime":1687957938983,"results":"26","hashOfConfig":"16"},{"size":4299,"mtime":1688047983238,"results":"27","hashOfConfig":"16"},{"size":4740,"mtime":1687957870350,"results":"28","hashOfConfig":"16"},{"size":2285,"mtime":1687774221125,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"695xkr",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\index.tsx",["78"],[],"import ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Main from './Components/Layout/Main/Main';\nimport { BrowserRouter } from 'react-router-dom';\nimport MainLayout from './Components/Layout/MainLayout/MainLayout';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n<BrowserRouter>\n<MainLayout/>\n</BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\reportWebVitals.ts",[],[],"C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Layout\\MainLayout\\MainLayout.tsx",[],[],"C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Layout\\Menu\\Menu.tsx",[],[],"C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Layout\\Footer\\Footer.tsx",[],[],"C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Layout\\Header\\Header.tsx",[],[],"C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Routing\\MainRouting\\MainRouting.tsx",[],[],"C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Pages\\Login\\Login.tsx",["79","80","81","82","83"],[],"import {Button, TextField} from \"@mui/material\";\nimport \"./Login.css\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useForm} from \"react-hook-form\";\nimport React, {useState} from \"react\";\n\ninterface ILoginProps {\n    setUser: React.Dispatch<any>\n    setIsLogged: React.Dispatch<any>\n    setIsAdmin: React.Dispatch<any>\n}\n\n\nconst Login = (props: ILoginProps) => {\n    // use form for form validation\n    const {\n        register,\n        handleSubmit,\n        formState: {errors},\n    } = useForm();\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const send = async (event: any) => {\n        try {\n            event.preventDefault();\n\n            // check email\n            if (email === \"\") {\n                alert(\"Email is missing\");\n                return;\n            }\n\n            // check password\n            if (password === \"\") {\n                alert(\"Password is missing\");\n                return;\n            }\n\n            // check if email is valid email using regex\n            if (!email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\n                alert(\"Email is not valid\");\n                return;\n            }\n\n            // check if password is at least 4 characters long\n            if (password.length < 4) {\n                alert(\"Password is too short\");\n                return;\n            }\n\n            console.log('1')\n\n            const res = await fetch(`http://localhost:8080/user/login`, {\n                method: \"POST\",\n                body: JSON.stringify({email, password}),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                }\n            })\n            console.log(res);\n            console.log('2')\n\n            if (res.status === 200){\n                const data = await res.json();\n                console.log('3')\n\n                console.log(`data from login is: ${data}`);\n                console.log('4')\n\n                props.setUser(data);\n                if (data.isAdmin) {\n                    props.setIsAdmin(true);\n                }\n                console.log('5')\n\n\n                // change the route to /vacations\n                navigate(\"/vacationsList\");\n            } else if (res.status === 404) {\n                alert(\"Incorrect email or password\");\n            }\n        } catch (error: any) {\n            console.error(`Error in login, message: ${error.message}, stack: ${error.stack}`);\n        }\n\n    };\n\n\n    const navigate = useNavigate();\n    return (\n        // <div className=\"Login Box\">\n        //   <form onSubmit={handleSubmit(send)}>\n        //   <h1>Login</h1>\n        //   <TextField placeholder=\"enter your email\"\n        //   {...register(\"email\", {\n        //     required: true,\n        //     pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n        //   })}\n        //   error={Boolean(errors.email)}\n        //   helperText={\n        //     errors.email &&\n        //     \"Email is required and must be a valid email address\"\n        //   }\n        //   ></TextField>\n        //   <br/>\n        //   <br/>\n        //   <TextField placeholder=\"enter your password\"\n        //     {...register(\"password\", {\n        //       required: true,\n        //       minLength: 4,\n        //     })}\n        //     error={Boolean(errors.password)}\n        //     helperText={\n        //       errors.password &&\n        //       \"Password must have a minimum of 4 characters\"\n        //     }\n        //   ></TextField>\n        //   <br/>\n        //   <br/>\n        //   <Button onClick={()=>navigate(\"/VacationsList\")}>Login</Button>\n        //   </form>\n        // </div>\n        <div>\n            <form className=\"Box\">\n                <label htmlFor='emailLoginInput'>\n                    Email:\n                </label>\n                <input\n                    value={email}\n                    onChange={event => setEmail(event.target.value)}\n                    type=\"email\" name=\"emailLoginInput\" id='emailLoginInput'/>\n                    <br/>\n                    <br/>\n                <label htmlFor='passwordLoginInput'>\n                    Password:\n                </label>\n                <input\n                    value={password}\n                    onChange={event => setPassword(event.target.value)}\n                    type=\"password\" name=\"passwordLoginInput\" id='passwordLoginInput'/>\n                    <br/>\n                    <br/>\n                <button onClick={(event)=>send(event)}>Login</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;\n\n\n","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Pages\\Register\\Register.tsx",["84","85","86","87","88"],[],"import {Button, TextField} from \"@mui/material\";\nimport \"./Register.css\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useForm} from \"react-hook-form\";\nimport React, {useState} from \"react\";\n\nconst Register = () => {\n    // use form for form validation\n    const {\n        register,\n        handleSubmit,\n        formState: {errors},\n    } = useForm();\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const send = async (event: any) => {\n        try {\n            event.preventDefault();\n\n            // check email\n            if (email === \"\") {\n                alert(\"Email is missing\");\n                return;\n            }\n\n            // check password\n            if (password === \"\") {\n                alert(\"Password is missing\");\n                return;\n            }\n\n            // check if email is valid email using regex\n            if (!email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\n                alert(\"Email is not valid\");\n                return;\n            }\n\n            // check if password is at least 4 characters long\n            if (password.length < 4) {\n                alert(\"Password is too short\");\n                return;\n            }\n\n            console.log('1')\n\n            const res = await fetch(`http://localhost:8080/user/login`, {\n                method: \"POST\",\n                body: JSON.stringify({email, password}),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                }\n            })\n            console.log(res);\n            console.log('2')\n\n            if (res.status === 200){\n                const data = await res.json();\n                console.log('3')\n\n                console.log(`data from login is: ${data}`);\n                console.log('4')\n\n\n                // change the route to /vacations\n                navigate(\"/vacationsList\");\n            } else if (res.status === 404) {\n                alert(\"Incorrect email or password\");\n            }\n        } catch (error: any) {\n            console.error(`Error in login, message: ${error.message}, stack: ${error.stack}`);\n        }\n\n    };\n\n\n    const navigate = useNavigate();\n    return (\n        // <div className=\"Login Box\">\n        //   <form onSubmit={handleSubmit(send)}>\n        //   <h1>Login</h1>\n        //   <TextField placeholder=\"enter your email\"\n        //   {...register(\"email\", {\n        //     required: true,\n        //     pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n        //   })}\n        //   error={Boolean(errors.email)}\n        //   helperText={\n        //     errors.email &&\n        //     \"Email is required and must be a valid email address\"\n        //   }\n        //   ></TextField>\n        //   <br/>\n        //   <br/>\n        //   <TextField placeholder=\"enter your password\"\n        //     {...register(\"password\", {\n        //       required: true,\n        //       minLength: 4,\n        //     })}\n        //     error={Boolean(errors.password)}\n        //     helperText={\n        //       errors.password &&\n        //       \"Password must have a minimum of 4 characters\"\n        //     }\n        //   ></TextField>\n        //   <br/>\n        //   <br/>\n        //   <Button onClick={()=>navigate(\"/VacationsList\")}>Login</Button>\n        //   </form>\n        // </div>\n        <div>\n            <form className=\"Box\">\n            <label htmlFor='firstNamelRegisterInput'>\n                    First Name:\n                </label>\n                <input\n                    value={firstName}\n                    onChange={event => setFirstName(event.target.value)}\n                    type=\"firstName\" name=\"firstNameRegisterInput\" id='firstNameRegisterInput'/>\n                    <br/>\n                    <br/>\n                <label htmlFor='lastNameRegisterInput'>\n                    Last Name:\n                </label>\n                <input\n                    value={lastName}\n                    onChange={event => setLastName(event.target.value)}\n                    type=\"lastName\" name=\"LastNameRegisterInput\" id='LastNameRegisterInput'/>\n                    <br/>\n                    <br/>\n                <label htmlFor='emailLoginInput'>\n                    Email:\n                </label>\n                <input\n                    value={email}\n                    onChange={event => setEmail(event.target.value)}\n                    type=\"email\" name=\"emailLoginInput\" id='emailLoginInput'/>\n                    <br/>\n                    <br/>\n                <label htmlFor='passwordLoginInput'>\n                    Password:\n                </label>\n                <input\n                    value={password}\n                    onChange={event => setPassword(event.target.value)}\n                    type=\"password\" name=\"passwordLoginInput\" id='passwordLoginInput'/>\n                    <br/>\n                    <br/>\n                <button onClick={(event)=>send(event)}>Register</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Register;","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Pages\\Page404\\Page404.tsx",[],[],"C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Pages\\AddVacation\\AddVacation.tsx",["89","90","91","92"],[],"import {Button, TextField} from \"@mui/material\";\nimport \"./AddVacation.css\";\nimport {useNavigate} from \"react-router-dom\";\nimport React, {useState} from \"react\";\nimport Vacation from \"../../../interfaces/Vacation\";\n\n\nconst AddVacation = () => {\n    // use form for form validation\n\n    const [destination, setdestination] = useState(\"\"); \n    const [description, setdescription] = useState(\"\");\n    const [startDate, setstartDate] = useState(\"\");\n    const [endDate, setendDate] = useState(\"\");\n    const [price, setprice] = useState(0);\n    const [image,setImage] = useState(\"\");\n\n    const send = async (event: any) => {\n        try {\n            event.preventDefault();\n\n            // check price\n            if (price < 0 || price > 10000) {\n                alert(\"It is not possible to enter a negative number or higher than 10,000\");\n                return;\n            }\n            \n            // check endOn>startOn\n            if (startDate>endDate) {\n                alert(\"The end date can not be earlier than the start date\");\n                return;\n            }\n\n\n\n            console.log('1')\n\n            const res = await fetch(`http://localhost:8080/vacation/addVacation`, {\n                method: \"POST\",\n                body: JSON.stringify({\n           \n                 destination,\n                  description,\n                   startDate,\n                   endDate,\n                   price,\n                   image,\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                }\n            })\n            console.log(res);\n            console.log('2')\n\n            if (res.status === 200){\n                const data = await res.json();\n                console.log('3')\n\n                console.log(`data from login is: ${data}`);\n                console.log('4')\n\n\n                // change the route to /vacations\n                navigate(\"/vacationsList\");\n            } else if (res.status === 404) {\n                alert(\"Incorrect email or password\");\n            }\n        } catch (error: any) {\n            console.error(`Error in login, message: ${error.message}, stack: ${error.stack}`);\n        }\n\n    };\n\n\n    const navigate = useNavigate();\n    return (\n        <div>\n            <form className=\"Box\">\n            <label htmlFor='firstNamelRegisterInput'>\n                    destination:\n                </label>\n                <input\n                    value={destination}\n                    onChange={event => setdestination(event.target.value)}\n                    type=\"text\" name=\"firstNameRegisterInput\" id='firstNameRegisterInput'/>\n                    <br/>\n                    <br/>\n                <label htmlFor='lastNameRegisterInput'>\n                    description:\n                </label>\n                <input\n                    value={description}\n                    onChange={event => setdescription(event.target.value)}\n                    type=\"text\" name=\"LastNameRegisterInput\" id='LastNameRegisterInput'/>\n                    <br/>\n                    <br/>\n                <label htmlFor='emailLoginInput'>\n                    start On:\n                </label>\n                <input\n                    value={startDate}\n                    onChange={event => setstartDate(event.target.value)}\n                    type=\"date\" name=\"emailLoginInput\" id='emailLoginInput'/>\n                    <br/>\n                    <br/>\n                <label htmlFor='passwordLoginInput'>\n                    end On:\n                </label>\n                <input\n                    value={endDate}\n                    onChange={event => setendDate(event.target.value)}\n                    type=\"date\" name=\"passwordLoginInput\" id='passwordLoginInput'/>\n                    <br/>\n                    <br/>\n                <label htmlFor='passwordLoginInput'>\n                    Image:\n                </label>\n                <input\n                    value={image}\n                    onChange={event => setendDate(event.target.value)}\n                    type=\"text\" name=\"passwordLoginInput\" id='passwordLoginInput'/>\n                    <br/>\n                    <br/>\n\n                <label htmlFor='passwordLoginInput'>\n                    Price:\n                </label>\n                <input\n                    value={price}\n                    onChange={event => setprice(+(event.target.value))}\n                    type=\"number\" name=\"passwordLoginInput\" id='passwordLoginInput'/>\n                    <br/>\n                    <br/>\n                    <button onClick={(event)=>send(event)}>Add Vacation</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AddVacation; \n","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Pages\\VacationsList\\VacationsList.tsx",[],[],"C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Components\\Pages\\EditVacation\\EditVacation.tsx",["93","94","95","96"],[],"import {Button, TextField} from \"@mui/material\";\nimport \"./EditVacation.css\";\nimport {useNavigate} from \"react-router-dom\";\nimport React, {useState} from \"react\";\nimport Vacation from \"../../../interfaces/Vacation\";\n\n\nconst EditVacation = () => {\n    // use form for form validation\n\n    const [destination, setdestination] = useState(\"\"); \n    const [description, setdescription] = useState(\"\");\n    const [startDate, setstartDate] = useState(\"\");\n    const [endDate, setendDate] = useState(\"\");\n    const [price, setprice] = useState(0);\n    const [image,setImage] = useState(\"\");\n\n    const send = async (event: any) => {\n        try {\n            event.preventDefault();\n\n            // check price\n            if (price < 0 || price > 10000) {\n                alert(\"It is not possible to enter a negative number or higher than 10,000\");\n                return;\n            }\n            \n            // check endOn>startOn\n            if (startDate>endDate) {\n                alert(\"The end date can not be earlier than the start date\");\n                return;\n            }\n\n\n\n            console.log('1')\n\n            const res = await fetch(`http://localhost:8080/vacation/addVacation`, {\n                method: \"POST\",\n                body: JSON.stringify({\n           \n                 destination,\n                  description,\n                   startDate,\n                   endDate,\n                   price,\n                   image,\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                }\n            })\n            console.log(res);\n            console.log('2')\n\n            if (res.status === 200){\n                const data = await res.json();\n                console.log('3')\n\n                console.log(`data from login is: ${data}`);\n                console.log('4')\n\n\n                // change the route to /vacations\n                navigate(\"/vacationsList\");\n            } else if (res.status === 404) {\n                alert(\"Incorrect email or password\");\n            }\n        } catch (error: any) {\n            console.error(`Error in login, message: ${error.message}, stack: ${error.stack}`);\n        }\n\n    };\n\n\n    const navigate = useNavigate();\n    return (\n        <div>\n            <form className=\"Box\">\n            <label htmlFor='firstNamelRegisterInput'>\n                    destination:\n                </label>\n                <input\n                    value={destination}\n                    onChange={event => setdestination(event.target.value)}\n                    type=\"text\" name=\"firstNameRegisterInput\" id='firstNameRegisterInput'/>\n                    <br/>\n                    <br/>\n                <label htmlFor='lastNameRegisterInput'>\n                    description:\n                </label>\n                <input\n                    value={description}\n                    onChange={event => setdescription(event.target.value)}\n                    type=\"text\" name=\"LastNameRegisterInput\" id='LastNameRegisterInput'/>\n                    <br/>\n                    <br/>\n                <label htmlFor='emailLoginInput'>\n                    start On:\n                </label>\n                <input\n                    value={startDate}\n                    onChange={event => setstartDate(event.target.value)}\n                    type=\"date\" name=\"emailLoginInput\" id='emailLoginInput'/>\n                    <br/>\n                    <br/>\n                <label htmlFor='passwordLoginInput'>\n                    end On:\n                </label>\n                <input\n                    value={endDate}\n                    onChange={event => setendDate(event.target.value)}\n                    type=\"date\" name=\"passwordLoginInput\" id='passwordLoginInput'/>\n                    <br/>\n                    <br/>\n                <label htmlFor='passwordLoginInput'>\n                    Image:\n                </label>\n                <input\n                    value={image}\n                    onChange={event => setendDate(event.target.value)}\n                    type=\"text\" name=\"passwordLoginInput\" id='passwordLoginInput'/>\n                    <br/>\n                    <br/>\n                <label htmlFor='passwordLoginInput'>\n                    Price:\n                </label>\n                <input\n                    value={price}\n                    onChange={event => setprice(+(event.target.value))}\n                    type=\"number\" name=\"passwordLoginInput\" id='passwordLoginInput'/>\n                    <br/>\n                    <br/>\n                    <button onClick={(event)=>send(event)}>Edit Vacation</button>\n            </form>\n        </div>\n    );\n}\n\nexport default EditVacation; \n","C:\\Users\\elino\\OneDrive\\שולחן העבודה\\vacations3\\vacations3\\Front\\front3\\src\\Redux\\VacationReducer.ts",[],[],{"ruleId":"97","severity":1,"message":"98","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":12},{"ruleId":"97","severity":1,"message":"101","line":1,"column":9,"nodeType":"99","messageId":"100","endLine":1,"endColumn":15},{"ruleId":"97","severity":1,"message":"102","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"103","line":17,"column":9,"nodeType":"99","messageId":"100","endLine":17,"endColumn":17},{"ruleId":"97","severity":1,"message":"104","line":18,"column":9,"nodeType":"99","messageId":"100","endLine":18,"endColumn":21},{"ruleId":"97","severity":1,"message":"105","line":19,"column":21,"nodeType":"99","messageId":"100","endLine":19,"endColumn":27},{"ruleId":"97","severity":1,"message":"101","line":1,"column":9,"nodeType":"99","messageId":"100","endLine":1,"endColumn":15},{"ruleId":"97","severity":1,"message":"102","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"103","line":10,"column":9,"nodeType":"99","messageId":"100","endLine":10,"endColumn":17},{"ruleId":"97","severity":1,"message":"104","line":11,"column":9,"nodeType":"99","messageId":"100","endLine":11,"endColumn":21},{"ruleId":"97","severity":1,"message":"105","line":12,"column":21,"nodeType":"99","messageId":"100","endLine":12,"endColumn":27},{"ruleId":"97","severity":1,"message":"101","line":1,"column":9,"nodeType":"99","messageId":"100","endLine":1,"endColumn":15},{"ruleId":"97","severity":1,"message":"102","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"106","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":16},{"ruleId":"97","severity":1,"message":"107","line":16,"column":18,"nodeType":"99","messageId":"100","endLine":16,"endColumn":26},{"ruleId":"97","severity":1,"message":"101","line":1,"column":9,"nodeType":"99","messageId":"100","endLine":1,"endColumn":15},{"ruleId":"97","severity":1,"message":"102","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"106","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":16},{"ruleId":"97","severity":1,"message":"107","line":16,"column":18,"nodeType":"99","messageId":"100","endLine":16,"endColumn":26},"@typescript-eslint/no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'TextField' is defined but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'errors' is assigned a value but never used.","'Vacation' is defined but never used.","'setImage' is assigned a value but never used."]